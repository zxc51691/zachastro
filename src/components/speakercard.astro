---
interface Props {
  name: string;
  role: string;
  company: string;
  bio?: string;
  image: string;
  tags?: string[];
  social?: {
    twitter?: string;
    linkedin?: string;
    github?: string;
  };
  slug?: string;
}

const { 
  name, 
  role, 
  company, 
  bio, 
  image, 
  tags = [], 
  social = {},
  slug
} = Astro.props;

const profileLink = slug ? `/speakers/${slug}` : undefined;
---

<div class="speaker-card">
  <div class="speaker-image">
    <img src={image} alt={`${name} - ${role} at ${company}`} />
    
    <div class="speaker-social">
      {social.twitter && (
        <a href={social.twitter} target="_blank" rel="noopener noreferrer" aria-label="Twitter profile">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"></path>
          </svg>
        </a>
      )}
      
      {social.linkedin && (
        <a href={social.linkedin} target="_blank" rel="noopener noreferrer" aria-label="LinkedIn profile">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
            <rect x="2" y="9" width="4" height="12"></rect>
            <circle cx="4" cy="4" r="2"></circle>
          </svg>
        </a>
      )}
      
      {social.github && (
        <a href={social.github} target="_blank" rel="noopener noreferrer" aria-label="GitHub profile">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
          </svg>
        </a>
      )}
    </div>
  </div>
  
  <div class="speaker-content">
    <h3 class="speaker-name">{name}</h3>
    <p class="speaker-position">{role} at {company}</p>
    
    {tags.length > 0 && (
      <div class="speaker-tags">
        {tags.map(tag => (
          <span class="speaker-tag">{tag}</span>
        ))}
      </div>
    )}
    
    {bio && <p class="speaker-bio">{bio}</p>}
    
    {profileLink && (
      <a href={profileLink} class="speaker-profile-link">
        View Profile
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </a>
    )}
  </div>
</div>

<style>
  .speaker-card {
    display: flex;
    flex-direction: column;
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .speaker-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .speaker-image {
    position: relative;
    aspect-ratio: 1 / 1;
    overflow: hidden;
  }

  .speaker-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .speaker-card:hover .speaker-image img {
    transform: scale(1.05);
  }

  .speaker-social {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.8), transparent);
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }

  .speaker-card:hover .speaker-social {
    opacity: 1;
    transform: translateY(0);
  }

  .speaker-social a {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: white;
    color: var(--color-primary);
    transition: all 0.3s ease;
  }

  .speaker-social a:hover {
    background-color: var(--color-primary);
    color: white;
    transform: scale(1.1);
  }

  .speaker-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .speaker-name {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    color: var(--color-text-dark);
  }

  .speaker-position {
    font-size: 0.9rem;
    color: var(--color-text-light);
    margin: 0 0 1rem 0;
  }

  .speaker-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .speaker-tag {
    font-size: 0.75rem;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    background-color: var(--color-primary-light);
    color: var(--color-primary);
  }

  .speaker-bio {
    font-size: 0.9rem;
    line-height: 1.6;
    color: var(--color-text);
    margin-bottom: 1.25rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .speaker-profile-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
    margin-top: auto;
    transition: color 0.3s;
  }

  .speaker-profile-link svg {
    transition: transform 0.3s;
  }

  .speaker-profile-link:hover {
    color: var(--color-primary-dark);
  }

  .speaker-profile-link:hover svg {
    transform: translateX(3px);
  }

  @media (min-width: 768px) {
    .speaker-card {
      flex-direction: row;
    }

    .speaker-image {
      width: 150px;
      flex-shrink: 0;
      aspect-ratio: auto;
      height: auto;
    }

    .speaker-social {
      flex-direction: column;
      left: auto;
      right: 0;
      top: 0;
      bottom: 0;
      width: 50px;
      background: linear-gradient(to left, rgba(0, 0, 0, 0.8), transparent);
      padding: 0.75rem;
    }
  }
</style>