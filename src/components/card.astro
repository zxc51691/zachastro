---
interface Props {
  title?: string;
  image?: string;
  href?: string;
  class?: string;
  variant?: 'default' | 'feature' | 'simple';
}

const { 
  title, 
  image, 
  href, 
  class: className = '',
  variant = 'default'
} = Astro.props;

const cardClasses = [
  'card',
  `card-${variant}`,
  className
].filter(Boolean).join(' ');
---

<div class={cardClasses}>
  {image && (
    <div class="card-image">
      <img src={image} alt={title || 'Card image'} />
    </div>
  )}
  <div class="card-content">
    {title && <h3 class="card-title">{title}</h3>}
    <div class="card-body">
      <slot />
    </div>
    {href && (
      <div class="card-footer">
        <a href={href} class="card-link">
          <slot name="link-text">Learn More</slot>
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="5" y1="12" x2="19" y2="12"></line>
            <polyline points="12 5 19 12 12 19"></polyline>
          </svg>
        </a>
      </div>
    )}
  </div>
</div>

<style>
  .card {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .card-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .card:hover .card-image img {
    transform: scale(1.05);
  }

  .card-content {
    padding: 1.5rem;
  }

  .card-title {
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    color: var(--color-text-dark);
  }

  .card-body {
    color: var(--color-text);
    margin-bottom: 1.25rem;
    line-height: 1.6;
  }

  .card-footer {
    margin-top: auto;
  }

  .card-link {
    display: inline-flex;
    align-items: center;
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s;
    gap: 0.5rem;
  }

  .card-link svg {
    transition: transform 0.3s;
  }

  .card-link:hover {
    color: var(--color-primary-dark);
  }

  .card-link:hover svg {
    transform: translateX(3px);
  }

  /* Variants */
  .card-feature {
    border: none;
    box-shadow: none;
    background-color: transparent;
  }

  .card-feature:hover {
    transform: none;
    box-shadow: none;
  }

  .card-feature .card-title {
    font-size: 1.5rem;
    color: var(--color-primary);
  }

  .card-simple {
    box-shadow: none;
    border: 1px solid var(--color-border);
  }

  .card-simple:hover {
    transform: none;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }
</style>