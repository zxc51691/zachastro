---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  fullWidth?: boolean;
  class?: string;
}

const { 
  href, 
  variant = 'primary',
  size = 'md',
  fullWidth = false,
  class: className = ''
} = Astro.props;

const Tag = href ? 'a' : 'button';

const classes = [
  'btn',
  `btn-${variant}`,
  `btn-${size}`,
  fullWidth ? 'btn-full' : '',
  className
].filter(Boolean).join(' ');
---

<Tag href={href} class={classes}>
  <slot />
</Tag>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  .btn-primary {
    background-color: var(--color-primary);
    color: white;
  }

  .btn-primary:hover {
    background-color: var(--color-primary-dark);
  }

  .btn-secondary {
    background-color: var(--color-secondary);
    color: white;
  }

  .btn-secondary:hover {
    background-color: var(--color-secondary-dark);
  }

  .btn-outline {
    background-color: transparent;
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .btn-outline:hover {
    background-color: var(--color-primary);
    color: white;
  }

  .btn-sm {
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
  }

  .btn-md {
    padding: 0.5rem 1.25rem;
    font-size: 1rem;
  }

  .btn-lg {
    padding: 0.75rem 1.75rem;
    font-size: 1.125rem;
  }

  .btn-full {
    width: 100%;
  }
</style>